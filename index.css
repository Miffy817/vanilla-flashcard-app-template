/* CSS reset - Don't modify */
*, *::before, *::after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

html {
	text-size-adjust: none;
}

body {
	line-height: 1.5;
	-webkit-font-smoothing: antialiased;
}

img, picture, video, canvas, svg {
	display: block;
	max-width: 100%;
}

input, button, textarea, select {
	font: inherit;
}

h1, h2, h3, h4, h5, h6 {
	font-weight: 650;
	text-wrap: balance;
	overflow-wrap: break-word;
}
/* End of CSS reset */

/* Applies a custom font and centers the page using a grid layout. */
html {
	font-family: "Playpen Sans", fantasy;
	font-size: clamp(12px, 0.5vw + 9.6px, 16px);
	width: 100%;
	height: 100%;
	display: grid;
	place-items: center;
	background-color: #f4f8fb;
	overflow: hidden;
}

body {
	display: contents;
}

/* Arranges the main content into rows for header, flashcard area, and actions. */
main {
	padding: 1rem;
	width: 100%;
	height: 100%;
	display: grid;
	grid-template-rows: auto 1fr auto;
	gap: 1rem;
	max-width: 60rem;
}

/* Styles the header with a title and a toggle button for the entries list. */
#header {
	color: #002a44;
	line-height: 1;
}

#toggle-entries {
	display: inline-block;
	width: 2.5rem;
	font-size: 70%;
	font-weight: 900;
	text-align: center;
	cursor: pointer;
	transform: rotate(88deg);
	transform-origin: 60% 60%;
	transition: color 0.3s;
	color: #007acc;
}

#toggle-entries:hover {
	color: #005488;
}

/* The entries list, which is overlaid on top of the flashcard area. */
#entries {
	position: relative;
	grid-row: 2 / 3;
	grid-column: 1 / 2;
	height: 100%;
	background-color: rgba(255, 255, 255, 0.9);
	border: 1px solid rgba(0, 0, 0, 0.1);
	display: none;
	opacity: 0;
	transition: display 0.3s allow-discrete, opacity 0.3s;
	z-index: 1;
	border-radius: 1rem;
}

#entries-inner {
	position: absolute;
	inset: 0;
	overflow-y: auto;
}

/* Table settings and row hover effects for the entries list. */
#entries table {
	width: 100%;
	border-collapse: collapse;
	text-align: center;
}

#entries th, #entries td {
	padding: 0.75rem;
	border-bottom: 1px solid #ddd;
}

#entries th {
	background-color: #ddf5ff;
}

#entries th:first-child {
	border-top-left-radius: 1rem;
}

#entries th:last-child {
	border-top-right-radius: 1rem;
}

#entries thead {
	position: sticky;
	top: 0;
}

#entries tbody tr {
	cursor: pointer;
	transition: background-color 0.3s;
}

#entries tbody tr:hover {
	background-color: #f1f1f1;
}

/* The #toggle-entries element acts as a label for #toggle-entries-checkbox. 
	Clicking #toggle-entries changes the state of #toggle-entries-checkbox.
	When #toggle-entries-checkbox is checked, this ruleset is in effect, and the #entries table becomes visible.
	Otherwise, the previous rules (display: none; opacity: 0;) inside the #entries ruleset remain effective, and the table is hidden. */
#toggle-entries-checkbox:checked ~ main #entries {
	display: block;
	opacity: 1;
	@starting-style {
		opacity: 0;
	}
}

.row-highlight {
	background-color: #fff3cd;
}

.overdue-date {
	color: #d9534f;
	font-weight: bold;
}

/* The flashcard container, which uses perspective to allow a 3D flip animation. */
#flashcard {
	grid-row: 2 / 3;
	grid-column: 1 / 2;
	height: 100%;
	position: relative;
	perspective: 60rem;
}

#card-inner {
	position: absolute;
	width: 100%;
	height: 100%;
	transform-style: preserve-3d;
	transition: transform 0.6s;
	cursor: pointer;
}

/* Rotates the card around the Y-axis when the checkbox is checked such that the back side is visible.
	It makes use of the same technique as the entries list to toggle the checkbox state when the card is clicked.
	When the checkbox is no longer checked, the card is rotated back to the front side. */
#flip-card-checkbox:checked ~ main #card-inner {
	transform: rotateY(180deg);
}

.card {
	position: absolute;
	width: 100%;
	height: 100%;
	backface-visibility: hidden;
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 2rem;
	background-color: #fefefe;
	border: 1px solid rgba(0, 0, 0, 0.1);
	font-size: 150%;
	border-radius: 1rem;
	box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
	transition: box-shadow 0.3s;
}

.card:hover {
	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

/* STUDENTS: Start of recommended modifications */
/* You can alter colours, fonts, sizing, or layout for .card-front and .card-back below. */

/* Styles for the front side of the card. */
.card-front {
	color: #11222d;
	/* Additional styles here (e.g., background-color: #bbccdd;) */
}

/* Add styles for additional elements on the front side here. Here is an example: */

#front-word {
	font-size: 200%;
}

/* Styles for the back side of the card. */
.card-back {
	transform: rotateY(180deg);
	display: grid;
	grid-template-columns: 1fr 1fr;
	grid-template-rows: 1fr 1fr;
	gap: 0.5rem;
	/* Additional styles here (e.g., background-color: #bbddcc;) */
}

/* Add styles for additional elements on the back side here. Here are some examples: */

#back-pos {
	padding: 1px 3px;
	color: #777;
	border: 1px solid #777;
	border-radius: 2px;
	font-size: 90%;
}

#back-image {
	grid-column: 2 / 3;
	grid-row: 1 / 2;
}

#back-audio {
	grid-column: 1 / 2;
	grid-row: 2 / 3;
}

#back-video {
	grid-column: 2 / 3;
	grid-row: 2 / 3;
}

/* STUDENTS: End of recommended modifications */

/* The actions area, which contains buttons for different actions. */
#actions {
	display: flex;
	justify-content: space-between;
	gap: 0.5rem;
}

button {
	appearance: none;
	border: 1px solid rgba(0, 0, 0, 0.1);
	padding: 0.5rem 2rem;
	border-radius: 0.5rem;
	background-color: #ddf5ff;
	box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
	transition: background-color 0.3s, box-shadow 0.3s;
	cursor: pointer;
}

button:hover {
	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
	background-color: #c1eaff;
}

#btns-progress {
	display: flex;
	gap: 0.5rem;
}

/* Different background colours help distinguish button actions. */
#btn-again {
	background-color: #ffcccc;
}

#btn-good {
	background-color: #ccffcc;
}

#btn-easy {
	background-color: #ccccff;
}
